#include <stdio.h>

//Exercicio 1

//Eduardo Reis Hueb


// Define um novo tipo de dado chamado 'pessoa'
typedef struct {
    double peso;    // Armazena o peso da pessoa (tipo double)
    int idade;      // Armazena a idade da pessoa (tipo int)
    double altura;  // Armazena a altura da pessoa (tipo double)
} pessoa;

// Função para imprimir os dados de uma pessoa
void imprimePessoa(pessoa p) {
    // Imprime o peso, idade e altura da pessoa
    printf("Peso: %lf. Idade: %d. Altura: %lf.\n\n", p.peso, p.idade, p.altura);
}

int main() {
    // Declara um vetor de 5 elementos do tipo pessoa e uma variável p1 do tipo pessoa
    pessoa pessoas[5], p1;

    // Atribui valores ao primeiro elemento do vetor pessoas
    pessoas[0].peso = 80.6;
    pessoas[0].idade = 40;
    pessoas[0].altura = 1.70;

    // Copia os dados de pessoas[0] para p1
    p1 = pessoas[0];

    // Se a idade de p1 for maior que 20, incrementa a idade em 1
    if (p1.idade > 20)
        p1.idade++;

    // Copia os dados de pessoas[0] para pessoas[1]
    pessoas[1] = pessoas[0];

    // Imprime os dados de p1
    imprimePessoa(p1);

    // Imprime os dados do vetor pessoas
    imprimePessoa(pessoas[0]);
    imprimePessoa(pessoas[1]);
    imprimePessoa(pessoas[2]);
    imprimePessoa(pessoas[3]);
    imprimePessoa(pessoas[4]);

    return 0; // Finaliza o programa
}



typedef struct {
    double peso;    
    int idade;     
    double altura;  
} pessoa;


void imprimePessoa(pessoa p) {
    printf("Peso: %.2lf. Idade: %d. Altura: %.2lf\n\n", p.peso, p.idade, p.altura);
}


void lePessoa(pessoa *p) {
    printf("Digite o peso: ");
    scanf("%lf", &p->peso);
    printf("Digite a idade: ");
    scanf("%d", &p->idade);
    printf("Digite a altura: ");
    scanf("%lf", &p->altura);
}

int main() {
    pessoa pessoas[5];  
  
    for (int i = 0; i < 5; i++) {
        printf("Pessoa %d:\n", i + 1);
        lePessoa(&pessoas[i]);
    }

    
    for (int i = 0; i < 5; i++) {
        printf("Pessoa %d:\n", i + 1);
        imprimePessoa(pessoas[i]);
    }

    return 0;
}


//Exercicio 2

#include <string.h>
#include <locale.h>

// Define um novo tipo de dado chamado 'Carro'
typedef struct {
    char modelo[50];  // Armazena o modelo do carro (string de até 50 caracteres)
    int ano;          // Armazena o ano de fabricação do carro
    double preco;     // Armazena o preço do carro (tipo double)
} Carro;

// Função para modificar o preço de um carro
void modificarPreco(Carro *c, double novoPreco) {
    c->preco = novoPreco;  // Modifica o preço do carro para o valor fornecido em 'novoPreco'
}

// Função para imprimir os dados de um carro
void imprimirCarro(Carro *c) {
    printf("Modelo: %s\n", c->modelo);     // Imprime o modelo do carro
    printf("Ano: %d\n", c->ano);           // Imprime o ano do carro
    printf("Preço: R$ %.2lf\n", c->preco); // Imprime o preço do carro com duas casas decimais
}

int main() {
    setlocale(LC_ALL, "portuguese");  // Configura o idioma para português (caso seja suportado pelo sistema)

    Carro carro1;  // Declara uma variável do tipo Carro chamada 'carro1'

    // Atribui valores aos campos da estrutura 'carro1'
    strcpy(carro1.modelo, "Xyz");     // Define o modelo do carro como "Xyz"
    carro1.ano = 2020;                // Define o ano do carro como 2020
    carro1.preco = 90000.00;          // Define o preço do carro como 90000.00

    printf("Dados antes da modificação:\n");
    imprimirCarro(&carro1);  // Imprime os dados do carro1 antes da modificação do preço

    // Chama a função para modificar o preço de 'carro1' para 115000.00
    modificarPreco(&carro1, 115000.00);

    printf("\nDados após a modificação do preço:\n");
    imprimirCarro(&carro1);  // Imprime os dados do carro1 após a modificação do preço

    return 0; // Termina o programa
}

//Exercicio 3

#include <stdio.h>

// Declaração de uma função que calcula o resultado
int calcularResultado(int v[], int n);

int main() {
    int vetor[5], i, resultado;  // Declara um vetor de 5 inteiros, uma variável de controle 'i' e uma variável para armazenar o resultado

    // Preenche o vetor com valores, onde cada elemento é o dobro do índice
    for (i = 0; i < 5; i++) {
        vetor[i] = i * 2;
    }

    // Chama a função calcularResultado passando o vetor e o tamanho 5
    resultado = calcularResultado(vetor, 5);

    // Imprime o resultado da soma dos elementos do vetor
    printf("O resultado é: %d\n", resultado);

    return 0; // Termina o programa
}

// Função que calcula a soma dos elementos de um vetor
int calcularResultado(int v[], int n) {
    int i, soma = 0;  // Declara variáveis para controle do loop e para armazenar a soma

    // Percorre o vetor e acumula a soma dos elementos
    for (i = 0; i < n; i++) {
        soma += v[i];
    }

    return soma; // Retorna a soma calculada
}

//Exercicio 4

float calcularMedia(float n1, float n2, float n3, float n4) {
    return (n1 + n2 + n3 + n4) / 4;
}

int main() {
    float n1, n2, n3, n4, media;
    printf("Digite as 4 notas do aluno: ");
    scanf("%f %f %f %f", &n1, &n2, &n3, &n4);

    media = calcularMedia(n1, n2, n3, n4);
    printf("Média: %.2f\n", media);
    if (media >= 7) {
        printf("Aprovado\n");
    } else {
        printf("Reprovado\n");
    }

    return 0;
}


//Exercicio 5

void exibirImpares(int num) {
    for (int i = 1; i <= num; i += 2) {
        if (i % 7 != 0) {
            printf("%d ", i);
        }
    }
    printf("\n");
}

int main() {
    int numero;
    printf("Digite um número: ");
    scanf("%d", &numero);

    exibirImpares(numero);

    return 0;
}


//Exercicio 6

int somar(int vetor[], int tamanho) {
    int soma = 0;
    for (int i = 0; i < tamanho; i++) {
        soma += vetor[i];
    }
    return soma;
}

int main() {
    int tamanho, soma;
    printf("Digite o tamanho do vetor: ");
    scanf("%d", &tamanho);

    int vetor[tamanho];
    printf("Digite os valores do vetor:\n");
    for (int i = 0; i < tamanho; i++) {
        scanf("%d", &vetor[i]);
    }

    soma = somar(vetor, tamanho);
    printf("Soma: %d\n", soma);
    printf("Média: %.2f\n", (float)soma / tamanho);

    return 0;
}


//Exercicio 7

void encontrarMaior(int vetor[], int tamanho) {
    int maior = vetor[0], posicao = 0;
    for (int i = 1; i < tamanho; i++) {
        if (vetor[i] > maior) {
            maior = vetor[i];
            posicao = i;
        }
    }
    printf("Maior valor: %d\nPosição: %d\n", maior, posicao);
}

int main() {
    int tamanho;
    printf("Digite o tamanho do vetor: ");
    scanf("%d", &tamanho);

    int vetor[tamanho];
    printf("Digite os valores do vetor:\n");
    for (int i = 0; i < tamanho; i++) {
        scanf("%d", &vetor[i]);
    }

    encontrarMaior(vetor, tamanho);

    return 0;
}

//Exercicio 8

void exibirPares(int numero) {
    for (int i = 2; i <= numero; i += 2) {
        printf("%d ", i);
    }
    printf("\n");
}

int main() {
    int numero;
    printf("Digite um número: ");
    scanf("%d", &numero);

    exibirPares(numero);

    return 0;
}

//Exercicio 9

int multiplicar(int vetor[], int tamanho) {
    int produto = 1;
    for (int i = 0; i < tamanho; i++) {
        produto *= vetor[i];
    }
    return produto;
}

int main() {
    int tamanho;
    printf("Digite o tamanho do vetor: ");
    scanf("%d", &tamanho);

    int vetor[tamanho];
    printf("Digite os valores do vetor:\n");
    for (int i = 0; i < tamanho; i++) {
        scanf("%d", &vetor[i]);
    }

    printf("Resultado da multiplicação: %d\n", multiplicar(vetor, tamanho));

    return 0;
}


//Exercicio 10

void maiorNumero(int num1, int num2) {
    if (num1 > num2) {
        printf("Maior número: %d\n", num1);
    } else if (num2 > num1) {
        printf("Maior número: %d\n", num2);
    } else {
        printf("Os números são iguais\n");
    }
}

int main() {
    int num1, num2;
    printf("Digite dois números: ");
    scanf("%d %d", &num1, &num2);

    maiorNumero(num1, num2);

    return 0;
}


//Exercicio 11

int menorNumero(int num1, int num2, int num3) {
    int menor = num1;
    if (num2 < menor) menor = num2;
    if (num3 < menor) menor = num3;
    return menor;
}

int main() {
    int num1, num2, num3;
    printf("Digite três números: ");
    scanf("%d %d %d", &num1, &num2, &num3);

    printf("Menor número: %d\n", menorNumero(num1, num2, num3));

    return 0;
}


//Exercicio 12

void exibirInverso(int vetor[], int tamanho) {
    for (int i = tamanho - 1; i >= 0; i--) {
        printf("%d ", vetor[i]);
    }
    printf("\n");
}

int main() {
    int vetor[10];
    printf("Digite 10 números:\n");
    for (int i = 0; i < 10; i++) {
        scanf("%d", &vetor[i]);
    }

    exibirInverso(vetor, 10);

    return 0;
}


//Exercicio 13

float calcularMedia(int num1, int num2, int num3) {
    return (num1 + num2 + num3) / 3.0;
}

int main() {
    int num1, num2, num3;
    printf("Digite três números: ");
    scanf("%d %d %d", &num1, &num2, &num3);

    printf("Média: %.2f\n", calcularMedia(num1, num2, num3));

    return 0;
}


//Exercicio 14

int calcularResultado(int soma, int primeiroValor, int ultimoValor) {
    return soma + (primeiroValor * 5) + (ultimoValor * 2);
}

int main() {
    int vetor[10], soma = 0;

    for (int i = 0; i < 10; i++) {
        vetor[i] = i + 1;
        soma += vetor[i];
    }

    int resultado = calcularResultado(soma, vetor[0], vetor[9]);
    printf("Resultado: %d\n", resultado);

    return 0;
}
